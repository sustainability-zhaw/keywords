res0<-1/(nMess)*sum(summanden)
# Nimmt amn nun (nMess) oder (nMess-1)?
# Man kann dies ausprobieren. Da wir die Abweichungen berechnet haben, muss der neue MITTELWERT, also die Summe aller (summanden)
# dividiert durch entweder (nMess) oder (nMess-1) gelich sein, wie die gegebene Varianz = (sigma^2)
res0<-1/(nMess-1)*sum(summanden)
res1<-1/nMess*sum(summanden)
result0<-rbind(result0,res0)
result1<-rbind(result1,res1)
}
# Summary
summary(result0)
summary(result1)
boxplot(x = result, range=0.0, horizontal=TRUE, varwidth=FALSE, notch=FALSE,
outline=TRUE, boxwex=0.3, border=c("blue"), xlab="Wahrscheinlichkeit", ylab="")
boxplot(x = result0, range=0.0, horizontal=TRUE, varwidth=FALSE, notch=FALSE,
outline=TRUE, boxwex=0.3, border=c("blue"), xlab="Wahrscheinlichkeit", ylab="")
# setzen des Zufallszahlengenerator
set.seed(5)
# Mittelwert
mu<-5
# Standardabweichung
sigma<-2
# Anzahl Messwiederholungen
nMess<-3
# Experiment mit 10000 Wiederholungen
result0<-c()
result1<-c()
NExperimente<-100
for (k in 1: NExperimente){
# Vektor mit nMEss normalverteilten Werten, unter Berücksichtigung von Mittelwert (mu) und Standardabweichung (sigma)
val<-rnorm(nMess,mu, sigma)
# Für jeden Wert von (val) die Abweichung zum Mittelwert (mu) berechnen. Das ergibt den Vektor (summanden) der nMEss Werte enthält
summanden<-(val-mu)^2
# Den Mittelwert der ABWEICHUNGEN messen !!! Nicht den Mittelwert der Verteilung. Dieser ist ja gegeben (mu)
res0<-1/(nMess)*sum(summanden)
# Nimmt amn nun (nMess) oder (nMess-1)?
# Man kann dies ausprobieren. Da wir die Abweichungen berechnet haben, muss der neue MITTELWERT, also die Summe aller (summanden)
# dividiert durch entweder (nMess) oder (nMess-1) gelich sein, wie die gegebene Varianz = (sigma^2)
res0<-1/(nMess-1)*sum(summanden)
result0<-rbind(result0,res0)
res1<-1/nMess*sum(summanden)
result1<-rbind(result1,res1)
}
# Variante für (nMess-1)
summary(result0)
boxplot(x = result0, range=0.0, horizontal=TRUE, varwidth=FALSE, notch=FALSE,
outline=TRUE, boxwex=0.3, border=c("blue"), xlab="Wahrscheinlichkeit", ylab="")
quantile(result0,probs = c(0.025,0.975))
# Variante für (nMess)
summary(result1)
boxplot(x = result1, range=0.0, horizontal=TRUE, varwidth=FALSE, notch=FALSE,
outline=TRUE, boxwex=0.3, border=c("blue"), xlab="Wahrscheinlichkeit", ylab="")
quantile(result1,probs = c(0.025,0.975))
# setzen des Zufallszahlengenerator
set.seed(5)
# Mittelwert
mu<-5
# Standardabweichung
sigma<-2
# Anzahl Messwiederholungen
nMess<-3
# Experiment mit 10000 Wiederholungen
result0<-c()
result1<-c()
NExperimente<-100
for (k in 1: NExperimente){
# Vektor mit nMEss normalverteilten Werten, unter Berücksichtigung von Mittelwert (mu) und Standardabweichung (sigma)
val<-rnorm(nMess,mu, sigma)
# Für jeden Wert von (val) die Abweichung zum Mittelwert (mu) berechnen. Das ergibt den Vektor (summanden) der nMEss Werte enthält
summanden<-(val-mu)^2
# Den Mittelwert der ABWEICHUNGEN messen !!! Nicht den Mittelwert der Verteilung. Dieser ist ja gegeben (mu)
res0<-1/(nMess)*sum(summanden)
# Nimmt man nun (nMess) oder (nMess-1)?
# Man kann dies ausprobieren. Da wir die ABWEICHUNGEN und nicht die gewürfelten Werte selber (!) addieren, muss der neue MITTELWERT,
# also die Summe aller (summanden) dividiert durch entweder (nMess) oder (nMess-1) gelich sein, wie die gegebene Varianz = (sigma^2)
# Variante (nMess-1)
res0<-1/(nMess-1)*sum(summanden)
result0<-rbind(result0,res0)
# Variante (nMess)
res1<-1/nMess*sum(summanden)
result1<-rbind(result1,res1)
}
# Variante für (nMess-1)
summary(result0)
boxplot(x = result0, range=0.0, horizontal=TRUE, varwidth=FALSE, notch=FALSE,
outline=TRUE, boxwex=0.3, border=c("blue"), xlab="nMess-1", ylab="")
quantile(result0,probs = c(0.025,0.975))
# Variante für (nMess)
summary(result1)
boxplot(x = result1, range=0.0, horizontal=TRUE, varwidth=FALSE, notch=FALSE,
outline=TRUE, boxwex=0.3, border=c("blue"), xlab="nMess", ylab="")
quantile(result1,probs = c(0.025,0.975))
set.seed(5)    # setzen des Zufallszahlengenerator
mu <- 5    # Mittelwert
sigma <- 2    # Standardabweichung
nMess < -3    # Anzahl Messwiederholungen
result <- c()  # Experiment mit 10000 Wiederholungen
NExperimente <- 100
for (k in 1: NExperimente){
val <- rnorm(nMess, mu, sigma)   # Vektor mit nMEss normalverteilten Werten, unter Berücksichtigung von Mittelwert (mu) und Standardabweichung (sigma)
summanden <- (val - mu) ^ 2    # Für jeden Wert von (val) die Abweichung zum Mittelwert (mu) berechnen. Das ergibt den Vektor (summanden) der nMEss Werte enthält
res <- 1 / (nMess) * sum(summanden)    # Den Mittelwert der ABWEICHUNGEN messen !!! Nicht den Mittelwert der Verteilung. Dieser ist ja gegeben (mu)
result <- rbind(result0,res0)
}
# Variante für (nMess-1)
summary(result)
boxplot(x = result, range = 0.0, horizontal = TRUE, varwidth = FALSE, notch = FALSE,
outline = TRUE, boxwex = 0.3, border = c("blue"), xlab = "nMess-1", ylab = "")
quantile(result0,probs = c(0.025, 0.975))
# Diskussion
# Der (Mean) der Variante (nMess) ergibt 3.84, bei 100 Messungen (nMess)
# Der (Mean) der Variante (nMess-1) ergibt 5.76, bei 100 Messungen (nMess)
# Ideal, heisst bei unendlich vielen Messungen (nMess), müsste der (Mean) bei (sigma^2), also 2^2=4 liegen.
# Variante (nMess) liegt näher beim erwarteten Wert von 4 als (nMess-1), ist also die Lösung !
# Probiere aus, wie sich der (Mean) (in summary) ändert, wenn du einmal (mu), dann (sigma) und dann (nMess) änderst und überlege, was der dann erhaltene Wert für (nMean) aussagt.
set.seed(5)    # setzen des Zufallszahlengenerator
mu <- 5    # Mittelwert
sigma <- 2    # Standardabweichung
nMess < -3    # Anzahl Messwiederholungen
result <- c()  # Experiment mit 10000 Wiederholungen
set.seed(5)    # setzen des Zufallszahlengenerator
mu <- 5    # Mittelwert
sigma <- 2    # Standardabweichung
nMess < -3    # Anzahl Messwiederholungen
result <- c()  # Experiment mit 10000 Wiederholungen
val <- rnorm(nMess, mu, sigma)
NExperimente <- 1
val <- rnorm(nMess, mu, sigma)
set.seed(5)    # setzen des Zufallszahlengenerator
mu <- 5    # Mittelwert
sigma <- 2    # Standardabweichung
nMess < -3    # Anzahl Messwiederholungen
result <- c()  # Experiment mit 10000 Wiederholungen
NExperimente <- 1
val <- rnorm(nMess, mu, sigma)
set.seed(5)    # setzen des Zufallszahlengenerator
mu <- 5    # Mittelwert
sigma <- 2    # Standardabweichung
nMess <- 3    # Anzahl Messwiederholungen
result <- c()  # Experiment mit 10000 Wiederholungen
NExperimente <- 1
val <- rnorm(nMess, mu, sigma)
summanden <- (val - mu)  ^ 2   #
res <- sum(summanden) / (nMess)     # Den Mittelwert der ABWEICHUNGEN messen !!! Nicht den Mittelwert der Verteilung. Dieser ist ja gegeben (mu)
res <- sum(summanden) / (nMess)
result <- rbind(result0,res0)
result <- rbind(result,res)
set.seed(5)    # setzen des Zufallszahlengenerator
mu <- 5    # Mittelwert
sigma <- 2    # Standardabweichung
nMess <- 3    # Anzahl Messwiederholungen
result <- c()  # Experiment mit 10000 Wiederholungen
NExperimente <- 10
for (k in 1: NExperimente){
val <- rnorm(nMess, mu, sigma)   # Vektor mit nMEss normalverteilten Werten, unter Berücksichtigung von Mittelwert (mu) und Standardabweichung (sigma)
summanden <- (val - mu)  ^ 2   # Für jeden Wert von (val) die Abweichung zum Mittelwert (mu) berechnen. Das ergibt den Vektor (summanden) der nMEss Werte enthält
res <- sum(summanden) / (nMess)     # Den Mittelwert der ABWEICHUNGEN messen !!! Nicht den Mittelwert der Verteilung. Dieser ist ja gegeben (mu)
result <- rbind(result,res)
}
# Variante für (nMess-1)
summary(result)
set.seed(5)    # setzen des Zufallszahlengenerator
mu <- 5    # Mittelwert
sigma <- 0    # Standardabweichung
nMess <- 3    # Anzahl Messwiederholungen
result <- c()  # Experiment mit 10000 Wiederholungen
NExperimente <- 10
for (k in 1: NExperimente){
val <- rnorm(nMess, mu, sigma)   # Vektor mit nMEss normalverteilten Werten, unter Berücksichtigung von Mittelwert (mu) und Standardabweichung (sigma)
summanden <- (val - mu)  ^ 2   # Für jeden Wert von (val) die Abweichung zum Mittelwert (mu) berechnen. Das ergibt den Vektor (summanden) der nMEss Werte enthält
res <- sum(summanden) / (nMess)     # Den Mittelwert der ABWEICHUNGEN messen !!! Nicht den Mittelwert der Verteilung. Dieser ist ja gegeben (mu)
result <- rbind(result,res)
}
# Variante für (nMess-1)
summary(result)
set.seed(5)    # setzen des Zufallszahlengenerator
mu <- 5    # Mittelwert
sigma <- 1    # Standardabweichung
nMess <- 3    # Anzahl Messwiederholungen
result <- c()  # Experiment mit 10000 Wiederholungen
NExperimente <- 10
for (k in 1: NExperimente){
val <- rnorm(nMess, mu, sigma)   # Vektor mit nMEss normalverteilten Werten, unter Berücksichtigung von Mittelwert (mu) und Standardabweichung (sigma)
summanden <- (val - mu)  ^ 2   # Für jeden Wert von (val) die Abweichung zum Mittelwert (mu) berechnen. Das ergibt den Vektor (summanden) der nMEss Werte enthält
res <- sum(summanden) / (nMess)     # Den Mittelwert der ABWEICHUNGEN messen !!! Nicht den Mittelwert der Verteilung. Dieser ist ja gegeben (mu)
result <- rbind(result,res)
}
# Variante für (nMess-1)
summary(result)
set.seed(5)    # setzen des Zufallszahlengenerator
mu <- 5    # Mittelwert
sigma <- 1    # Standardabweichung
nMess <- 3    # Anzahl Messwiederholungen
result <- c()  # Experiment mit 10000 Wiederholungen
NExperimente <- 100
for (k in 1: NExperimente){
val <- rnorm(nMess, mu, sigma)   # Vektor mit nMEss normalverteilten Werten, unter Berücksichtigung von Mittelwert (mu) und Standardabweichung (sigma)
summanden <- (val - mu)  ^ 2   # Für jeden Wert von (val) die Abweichung zum Mittelwert (mu) berechnen. Das ergibt den Vektor (summanden) der nMEss Werte enthält
res <- sum(summanden) / (nMess)     # Den Mittelwert der ABWEICHUNGEN messen !!! Nicht den Mittelwert der Verteilung. Dieser ist ja gegeben (mu)
result <- rbind(result,res)
}
# Variante für (nMess-1)
summary(result)
# Variante für (nMess-1)
summary(result)
sigma <- 2    # Standardabweichung
set.seed(5)    # setzen des Zufallszahlengenerator
mu <- 5    # Mittelwert
sigma <- 2    # Standardabweichung
nMess <- 3    # Anzahl Messwiederholungen
result <- c()  # Experiment mit 10000 Wiederholungen
NExperimente <- 100
for (k in 1: NExperimente){
val <- rnorm(nMess, mu, sigma)   # Vektor mit nMEss normalverteilten Werten, unter Berücksichtigung von Mittelwert (mu) und Standardabweichung (sigma)
summanden <- (val - mu)  ^ 2   # Für jeden Wert von (val) die Abweichung zum Mittelwert (mu) berechnen. Das ergibt den Vektor (summanden) der nMEss Werte enthält
res <- sum(summanden) / (nMess)     # Den Mittelwert der ABWEICHUNGEN messen !!! Nicht den Mittelwert der Verteilung. Dieser ist ja gegeben (mu)
result <- rbind(result,res)
}
# Variante für (nMess-1)
summary(result)
set.seed(5)    # setzen des Zufallszahlengenerator
mu <- 5    # Mittelwert
sigma <- 2    # Standardabweichung
nMess <- 3    # Anzahl Messwiederholungen
result <- c()  # Experiment mit 10000 Wiederholungen
NExperimente <- 1000
for (k in 1: NExperimente){
val <- rnorm(nMess, mu, sigma)   # Vektor mit nMEss normalverteilten Werten, unter Berücksichtigung von Mittelwert (mu) und Standardabweichung (sigma)
summanden <- (val - mu)  ^ 2   # Für jeden Wert von (val) die Abweichung zum Mittelwert (mu) berechnen. Das ergibt den Vektor (summanden) der nMEss Werte enthält
res <- sum(summanden) / (nMess)     # Den Mittelwert der ABWEICHUNGEN messen !!! Nicht den Mittelwert der Verteilung. Dieser ist ja gegeben (mu)
result <- rbind(result,res)
}
# Variante für (nMess-1)
summary(result)
set.seed(5)    # setzen des Zufallszahlengenerator
mu <- 5    # Mittelwert
sigma <- 1    # Standardabweichung
nMess <- 3    # Anzahl Messwiederholungen
result <- c()  # Experiment mit 10000 Wiederholungen
NExperimente <- 1000
for (k in 1: NExperimente){
val <- rnorm(nMess, mu, sigma)   # Vektor mit nMEss normalverteilten Werten, unter Berücksichtigung von Mittelwert (mu) und Standardabweichung (sigma)
summanden <- (val - mu)  ^ 2   # Für jeden Wert von (val) die Abweichung zum Mittelwert (mu) berechnen. Das ergibt den Vektor (summanden) der nMEss Werte enthält
res <- sum(summanden) / (nMess)     # Den Mittelwert der ABWEICHUNGEN messen !!! Nicht den Mittelwert der Verteilung. Dieser ist ja gegeben (mu)
result <- rbind(result,res)
}
# Variante für (nMess-1)
summary(result)
set.seed(5)    # setzen des Zufallszahlengenerator
mu <- 5    # Mittelwert
sigma <- 1    # Standardabweichung
nMess <- 3    # Anzahl Messwiederholungen
result <- c()  # Experiment mit 10000 Wiederholungen
NExperimente <- 1000
for (k in 1: NExperimente){
val <- rnorm(nMess-1, mu, sigma)   # Vektor mit nMEss normalverteilten Werten, unter Berücksichtigung von Mittelwert (mu) und Standardabweichung (sigma)
summanden <- (val - mu)  ^ 2   # Für jeden Wert von (val) die Abweichung zum Mittelwert (mu) berechnen. Das ergibt den Vektor (summanden) der nMEss Werte enthält
res <- sum(summanden) / (nMess)     # Den Mittelwert der ABWEICHUNGEN messen !!! Nicht den Mittelwert der Verteilung. Dieser ist ja gegeben (mu)
result <- rbind(result,res)
}
# Variante für (nMess-1)
summary(result)
set.seed(5)    # setzen des Zufallszahlengenerator
mu <- 5    # Mittelwert
sigma <- 1    # Standardabweichung
nMess <- 3    # Anzahl Messwiederholungen
result <- c()  # Experiment mit 10000 Wiederholungen
NExperimente <- 1000
for (k in 1: NExperimente){
val <- rnorm(nMess, mu, sigma)   # Vektor mit nMEss normalverteilten Werten, unter Berücksichtigung von Mittelwert (mu) und Standardabweichung (sigma)
summanden <- (val - mu)  ^ 2   # Für jeden Wert von (val) die Abweichung zum Mittelwert (mu) berechnen. Das ergibt den Vektor (summanden) der nMEss Werte enthält
res <- sum(summanden) / (nMess)     # Den Mittelwert der ABWEICHUNGEN messen !!! Nicht den Mittelwert der Verteilung. Dieser ist ja gegeben (mu)
result <- rbind(result,res)
}
# Variante für (nMess-1)
summary(result)
set.seed(5)    # setzen des Zufallszahlengenerator
mu <- 5    # Mittelwert
sigma <- 1    # Standardabweichung
nMess <- 3    # Anzahl Messwiederholungen
result <- c()  # Experiment mit 10000 Wiederholungen
NExperimente <- 1000
for (k in 1: NExperimente){
val <- rnorm(nMess-1, mu, sigma)   # Vektor mit nMEss normalverteilten Werten, unter Berücksichtigung von Mittelwert (mu) und Standardabweichung (sigma)
summanden <- (val - mu)  ^ 2   # Für jeden Wert von (val) die Abweichung zum Mittelwert (mu) berechnen. Das ergibt den Vektor (summanden) der nMEss Werte enthält
res <- sum(summanden) / (nMess)     # Den Mittelwert der ABWEICHUNGEN messen !!! Nicht den Mittelwert der Verteilung. Dieser ist ja gegeben (mu)
result <- rbind(result,res)
}
# Variante für (nMess-1)
summary(result)
set.seed(5)    # setzen des Zufallszahlengenerator
mu <- 5    # Mittelwert
sigma <- 2    # Standardabweichung
nMess <- 3    # Anzahl Messwiederholungen
result <- c()  # Experiment mit 10000 Wiederholungen
NExperimente <- 1000
for (k in 1: NExperimente){
val <- rnorm(nMess, mu, sigma)   # Vektor mit nMEss normalverteilten Werten, unter Berücksichtigung von Mittelwert (mu) und Standardabweichung (sigma)
summanden <- (val - mu)  ^ 2   # Für jeden Wert von (val) die Abweichung zum Mittelwert (mu) berechnen. Das ergibt den Vektor (summanden) der nMEss Werte enthält
res <- sum(summanden) / (nMess)     # Den Mittelwert der ABWEICHUNGEN messen !!! Nicht den Mittelwert der Verteilung. Dieser ist ja gegeben (mu)
result <- rbind(result,res)
}
# Variante für (nMess-1)
summary(result)
set.seed(5)    # setzen des Zufallszahlengenerator
mu <- 5    # Mittelwert
sigma <- 2    # Standardabweichung
nMess <- 3    # Anzahl Messwiederholungen
result <- c()  # Experiment mit 10000 Wiederholungen
NExperimente <- 1000
for (k in 1: NExperimente){
val <- rnorm(nMess-1, mu, sigma)   # Vektor mit nMEss normalverteilten Werten, unter Berücksichtigung von Mittelwert (mu) und Standardabweichung (sigma)
summanden <- (val - mu)  ^ 2   # Für jeden Wert von (val) die Abweichung zum Mittelwert (mu) berechnen. Das ergibt den Vektor (summanden) der nMEss Werte enthält
res <- sum(summanden) / (nMess)     # Den Mittelwert der ABWEICHUNGEN messen !!! Nicht den Mittelwert der Verteilung. Dieser ist ja gegeben (mu)
result <- rbind(result,res)
}
# Variante für (nMess-1)
summary(result)
set.seed(5)    # setzen des Zufallszahlengenerator
mu <- 5    # Mittelwert
sigma <- 2    # Standardabweichung
nMess <- 3    # Anzahl Messwiederholungen
result <- c()  # Experiment mit 10000 Wiederholungen
NExperimente <- 1000
for (k in 1: NExperimente){
val <- rnorm(nMess, mu, sigma)   # Vektor mit nMEss normalverteilten Werten, unter Berücksichtigung von Mittelwert (mu) und Standardabweichung (sigma)
summanden <- (val - mu)  ^ 2   # Für jeden Wert von (val) die Abweichung zum Mittelwert (mu) berechnen. Das ergibt den Vektor (summanden) der nMEss Werte enthält
res <- sum(summanden) / (nMess)     # Den Mittelwert der ABWEICHUNGEN messen !!! Nicht den Mittelwert der Verteilung. Dieser ist ja gegeben (mu)
result <- rbind(result,res)
}
# Variante für (nMess-1)
summary(result)
set.seed(5)    # setzen des Zufallszahlengenerator
mu <- 5    # Mittelwert
sigma <- 2    # Standardabweichung
nMess <- 3    # Anzahl Messwiederholungen
result <- c()  # Experiment mit 10000 Wiederholungen
NExperimente <- 1
for (k in 1: NExperimente){
val <- rnorm(nMess, mu, sigma)   # Vektor mit nMEss normalverteilten Werten, unter Berücksichtigung von Mittelwert (mu) und Standardabweichung (sigma)
summanden <- (val - mu)  ^ 2   # Für jeden Wert von (val) die Abweichung zum Mittelwert (mu) berechnen. Das ergibt den Vektor (summanden) der nMEss Werte enthält
res <- sum(summanden) / (nMess)     # Den Mittelwert der ABWEICHUNGEN messen !!! Nicht den Mittelwert der Verteilung. Dieser ist ja gegeben (mu)
result <- rbind(result,res)
}
# Variante für (nMess-1)
summary(result)
set.seed(5)    # setzen des Zufallszahlengenerator
mu <- 5    # Mittelwert
sigma <- 2    # Standardabweichung
nMess <- 3    # Anzahl Messwiederholungen
result <- c()  # Experiment mit 10000 Wiederholungen
NExperimente <- 10
for (k in 1: NExperimente){
val <- rnorm(nMess, mu, sigma)   # Vektor mit nMEss normalverteilten Werten, unter Berücksichtigung von Mittelwert (mu) und Standardabweichung (sigma)
summanden <- (val - mu)  ^ 2   # Für jeden Wert von (val) die Abweichung zum Mittelwert (mu) berechnen. Das ergibt den Vektor (summanden) der nMEss Werte enthält
res <- sum(summanden) / (nMess)     # Den Mittelwert der ABWEICHUNGEN messen !!! Nicht den Mittelwert der Verteilung. Dieser ist ja gegeben (mu)
result <- rbind(result,res)
}
# Variante für (nMess-1)
summary(result)
set.seed(5)    # setzen des Zufallszahlengenerator
mu <- 5    # Mittelwert
sigma <- 2    # Standardabweichung
nMess <- 3    # Anzahl Messwiederholungen
result <- c()  # Experiment mit 10000 Wiederholungen
NExperimente <- 100
for (k in 1: NExperimente){
val <- rnorm(nMess, mu, sigma)   # Vektor mit nMEss normalverteilten Werten, unter Berücksichtigung von Mittelwert (mu) und Standardabweichung (sigma)
summanden <- (val - mu)  ^ 2   # Für jeden Wert von (val) die Abweichung zum Mittelwert (mu) berechnen. Das ergibt den Vektor (summanden) der nMEss Werte enthält
res <- sum(summanden) / (nMess)     # Den Mittelwert der ABWEICHUNGEN messen !!! Nicht den Mittelwert der Verteilung. Dieser ist ja gegeben (mu)
result <- rbind(result,res)
}
# Variante für (nMess-1)
summary(result)
set.seed(5)    # setzen des Zufallszahlengenerator
mu <- 5    # Mittelwert
sigma <- 2    # Standardabweichung
nMess <- 3    # Anzahl Messwiederholungen
result <- c()  # Experiment mit 10000 Wiederholungen
NExperimente <- 10000
for (k in 1: NExperimente){
val <- rnorm(nMess, mu, sigma)   # Vektor mit nMEss normalverteilten Werten, unter Berücksichtigung von Mittelwert (mu) und Standardabweichung (sigma)
summanden <- (val - mu)  ^ 2   # Für jeden Wert von (val) die Abweichung zum Mittelwert (mu) berechnen. Das ergibt den Vektor (summanden) der nMEss Werte enthält
res <- sum(summanden) / (nMess)     # Den Mittelwert der ABWEICHUNGEN messen !!! Nicht den Mittelwert der Verteilung. Dieser ist ja gegeben (mu)
result <- rbind(result,res)
}
# Variante für (nMess-1)
summary(result)
set.seed(5)    # setzen des Zufallszahlengenerator
mu <- 5    # Mittelwert
sigma <- 2    # Standardabweichung
nMess <- 3    # Anzahl Messwiederholungen
result <- c()  # Experiment mit 10000 Wiederholungen
NExperimente <- 100000
for (k in 1: NExperimente){
val <- rnorm(nMess, mu, sigma)   # Vektor mit nMEss normalverteilten Werten, unter Berücksichtigung von Mittelwert (mu) und Standardabweichung (sigma)
summanden <- (val - mu)  ^ 2   # Für jeden Wert von (val) die Abweichung zum Mittelwert (mu) berechnen. Das ergibt den Vektor (summanden) der nMEss Werte enthält
res <- sum(summanden) / (nMess)     # Den Mittelwert der ABWEICHUNGEN messen !!! Nicht den Mittelwert der Verteilung. Dieser ist ja gegeben (mu)
result <- rbind(result,res)
}
# Variante für (nMess-1)
summary(result)
set.seed(5)    # setzen des Zufallszahlengenerator
mu <- 3000    # Mittelwert
sigma <- 2    # Standardabweichung
nMess <- 3    # Anzahl Messwiederholungen
result <- c()  # Experiment mit 10000 Wiederholungen
NExperimente <- 100000
for (k in 1: NExperimente){
val <- rnorm(nMess, mu, sigma)   # Vektor mit nMEss normalverteilten Werten, unter Berücksichtigung von Mittelwert (mu) und Standardabweichung (sigma)
summanden <- (val - mu)  ^ 2   # Für jeden Wert von (val) die Abweichung zum Mittelwert (mu) berechnen. Das ergibt den Vektor (summanden) der nMEss Werte enthält
res <- sum(summanden) / (nMess)     # Den Mittelwert der ABWEICHUNGEN messen !!! Nicht den Mittelwert der Verteilung. Dieser ist ja gegeben (mu)
result <- rbind(result,res)
}
set.seed(5)    # setzen des Zufallszahlengenerator
mu <- 3000    # Mittelwert
sigma <- 2    # Standardabweichung
nMess <- 3    # Anzahl Messwiederholungen
result <- c()  # Experiment mit 10000 Wiederholungen
NExperimente <- 1000
for (k in 1: NExperimente){
val <- rnorm(nMess, mu, sigma)   # Vektor mit nMEss normalverteilten Werten, unter Berücksichtigung von Mittelwert (mu) und Standardabweichung (sigma)
summanden <- (val - mu)  ^ 2   # Für jeden Wert von (val) die Abweichung zum Mittelwert (mu) berechnen. Das ergibt den Vektor (summanden) der nMEss Werte enthält
res <- sum(summanden) / (nMess)     # Den Mittelwert der ABWEICHUNGEN messen !!! Nicht den Mittelwert der Verteilung. Dieser ist ja gegeben (mu)
result <- rbind(result,res)
}
# Variante für (nMess-1)
summary(result)
set.seed(5)    # setzen des Zufallszahlengenerator
mu <- 100    # Mittelwert
sigma <- 2    # Standardabweichung
nMess <- 3    # Anzahl Messwiederholungen
result <- c()  # Experiment mit 10000 Wiederholungen
NExperimente <- 1000
for (k in 1: NExperimente){
val <- rnorm(nMess, mu, sigma)   # Vektor mit nMEss normalverteilten Werten, unter Berücksichtigung von Mittelwert (mu) und Standardabweichung (sigma)
summanden <- (val - mu)  ^ 2   # Für jeden Wert von (val) die Abweichung zum Mittelwert (mu) berechnen. Das ergibt den Vektor (summanden) der nMEss Werte enthält
res <- sum(summanden) / (nMess)     # Den Mittelwert der ABWEICHUNGEN messen !!! Nicht den Mittelwert der Verteilung. Dieser ist ja gegeben (mu)
result <- rbind(result,res)
}
# Variante für (nMess-1)
summary(result)
boxplot(x = result, range = 0.0, horizontal = TRUE, varwidth = FALSE, notch = FALSE,
outline = TRUE, boxwex = 0.3, border = c("blue"), xlab = "nMess-1", ylab = "")
quantile(result0,probs = c(0.025, 0.975))
quantile(result,probs = c(0.025, 0.975))
quantile(diff(result,probs = c(0.025, 0.975)))
set.seed(5)    # setzen des Zufallszahlengenerator
mu <- 100    # Mittelwert
sigma <- 2    # Standardabweichung
nMess <- 3    # Anzahl Messwiederholungen
result <- c()  # Experiment mit 10000 Wiederholungen
NExperimente <- 1000
for (k in 1: NExperimente){
val <- rnorm(nMess, mu, sigma)   # Vektor mit nMEss normalverteilten Werten, unter Berücksichtigung von Mittelwert (mu) und Standardabweichung (sigma)
summanden <- (val - mu)  ^ 2   # Für jeden Wert von (val) die Abweichung zum Mittelwert (mu) berechnen. Das ergibt den Vektor (summanden) der nMEss Werte enthält
res <- sum(summanden) / (nMess)     # Den Mittelwert der ABWEICHUNGEN messen !!! Nicht den Mittelwert der Verteilung. Dieser ist ja gegeben (mu)
result <- rbind(result,res)
}
# Variante für (nMess-1)
summary(result)
set.seed(5)    # setzen des Zufallszahlengenerator
mu <- 100    # Mittelwert
sigma <- 2    # Standardabweichung
nMess <- 3    # Anzahl Messwiederholungen
result <- c()  # Experiment mit 10000 Wiederholungen
NExperimente <- 1500
for (k in 1: NExperimente){
val <- rnorm(nMess, mu, sigma)   # Vektor mit nMEss normalverteilten Werten, unter Berücksichtigung von Mittelwert (mu) und Standardabweichung (sigma)
summanden <- (val - mu)  ^ 2   # Für jeden Wert von (val) die Abweichung zum Mittelwert (mu) berechnen. Das ergibt den Vektor (summanden) der nMEss Werte enthält
res <- sum(summanden) / (nMess)     # Den Mittelwert der ABWEICHUNGEN messen !!! Nicht den Mittelwert der Verteilung. Dieser ist ja gegeben (mu)
result <- rbind(result,res)
}
# Variante für (nMess-1)
summary(result)
quantile(result,probs = c(0.025, 0.975))
plumber::plumb(file='Dropbox/Mac/Documents/GitHub/sustainability/hello-package/hello-package/src/hello.R')$run()
plumber::plumb(file='Dropbox/Mac/Documents/GitHub/sustainability/hello-package/hello-package/src/hello.R')$run()
#* @get /config
function() {
return(config)
}
plumber::plumb(file='Dropbox/Mac/Documents/GitHub/sustainability/keywords/src/dc_sdgs_mapping.R')$run()
stringr::str_c(host, repo)
library(plumber)
#
# library(ghql)
library(qpcR)
`%>%` = magrittr::`%>%`
host <- "/Users/bajk/documents/Github/sustainability-zhaw/"
repo <- "dc_test/"
stringr::str_c(host, repo)
library(plumber)
#
# library(ghql)
library(qpcR)
`%>%` = magrittr::`%>%`
host <- "/Users/bajk/documents/Github/sustainability-zhaw/"
repo <- "keywords/"
setwd(stringr::str_c(host, repo))
wd = getwd()
config <- yaml::read_yaml(stringr::str_c(wd, "/config.yml"))
stringr::str_c(wd, "/config.yml")
setwd(stringr::str_c(host, repo))
stringr::str_c(host, repo)
host <- "/Users/bajk/documents/Github/sustainability/"
repo <- "keywords/"
setwd(stringr::str_c(host, repo))
wd = getwd()
config <- yaml::read_yaml(stringr::str_c(wd, "/config.yml"))
plumb(file='src/dc_sdgs_mapping.R')$run()
plumb(file='~/Dropbox/Mac/Documents/GitHub/sustainability/hello-package/hello-package/src/hello.R')$run()
